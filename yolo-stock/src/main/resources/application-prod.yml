#日志级别
logging:
  level:
    #        tk.mybatis: DEBUG
    com.yolo.stock: DEBUG
  file: ./logs/log.log
spring:
  application:
    name: ace-stock
  jackson:
    #日期类型转化json的格式
    date-format: yyyy-MM-dd HH:mm:ss
    #时区
    time-zone: GMT+8
    #属性为null时，不序列化
    default-property-inclusion: non_null
  datasource:
    name: test
    url: jdbc:mysql://@MYSQL_HOST@:${MYSQL_PORT:3306}/yolo_stock?useUnicode=true&characterEncoding=UTF8&useSSL=false
    username: root
    password: 123456
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    filters: stat
    maxActive: 20
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
  rabbitmq:
    host: ${RABBIT_MQ_HOST:localhost}
    port:  ${RABBIT_MQ_PORT:5672}
    username: guest
    password: guest
  sleuth:
    enabled: true
    http:
      legacy:
        enabled: true
#    cloud:
#       #启用consul服务发现功能，将服务注册到consul上
#       consul:
#         enabled: true
#         host: 127.0.0.1
#         port: 8500
#         discovery:
#           healthCheckPath: /actuator/health
#           healthCheckInterval: 5s
#           instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
#           register: true
#           enabled: true
sample:
  zipkin:
    # When enabled=false, traces log to the console. Comment to send to zipkin
    enabled: false

mybatis:
  basepackage: com.yolo.stock.mapper
  xmlLocation: classpath:mapper/**/*.xml
  mapper-locations: "classpath*:mapper/*.xml"

server:
  port: 8881


#eureka:
#    instance:
#        statusPageUrlPath: /actuator/info
#        healthCheckUrlPath: /actuator/health
#        # docker 部署开启
#        prefer-ip-address: true
#        ip-address: 127.0.0.1
#    client:
#        serviceUrl:
##            defaultZone: http://localhost:8761/eureka/
#                    # docker 部署开启
#            defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/
# 必须配置
feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 100000
  ConnectTimeout: 100000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 110000


# 配置swagger
swagger:
  enabled: true
  base-package: com.yolo.stock
  title: ace-stock
  version: 1.0.0.SNAPSHOT
  description: 管理后端服务
  contact:
    name: stock

auth:
  serviceId: ace-auth
  user:
    token-header: Authorization
  client:
    id: ace-stock
    secret: 123456
    token-header: x-client-token

#redis-cache 相关
redis:
  pool:
    maxActive: 300
    maxIdle: 100
    maxWait: 1000
  host: ${REDIS_HOST:localhost}
  port:  ${REDIS_PORT:6379}
  password: 123456
  timeout: 2000
  # 服务或应用名
  sysName: ace-stock
  enable: true
  database: 0

management:
  endpoints:
    web:
      exposure:
        include: '*'
  security:
    enabled: false

stockDataDirPath: /usr/deploy/stockDataDir

# 邮箱验证发件人配置
mail:
  sendMail: 15051959350@163.com
  password: zhuri123

